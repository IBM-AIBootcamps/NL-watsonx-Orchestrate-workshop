# This file was autogenerated by uv via the following command:
#    uv export --no-hashes --format requirements-txt
annotated-types==0.7.0
    # via pydantic
anyio==4.9.0
    # via httpx
appnope==0.1.4 ; sys_platform == 'darwin'
    # via ipykernel
asttokens==3.0.0
    # via stack-data
attrs==25.3.0
    # via
    #   jsonschema
    #   referencing
certifi==2025.7.14
    # via
    #   httpcore
    #   httpx
    #   ibm-watsonx-orchestrate
    #   requests
    #   wassima
cffi==1.17.1
    # via
    #   cryptography
    #   pyzmq
    #   zstandard
charset-normalizer==3.4.2
    # via
    #   niquests
    #   requests
click==8.1.8
    # via
    #   ibm-watsonx-orchestrate
    #   typer
cloudscraper==1.2.71
    # via translators
colorama==0.4.6 ; sys_platform == 'win32'
    # via
    #   click
    #   ipython
    #   tqdm
comm==0.2.2
    # via ipykernel
cryptography==45.0.5
    # via translators
dataclasses-json==0.6.7
    # via ibm-watsonx-orchestrate-evaluation-framework
debugpy==1.8.15
    # via ipykernel
decorator==5.2.1
    # via ipython
dill==0.4.0
    # via
    #   multiprocess
    #   pathos
docstring-parser==0.16
    # via ibm-watsonx-orchestrate
executing==2.2.0
    # via stack-data
exejs==0.0.4
    # via translators
h11==0.16.0
    # via
    #   httpcore
    #   urllib3-future
httpcore==1.0.9
    # via httpx
httpx==0.28.1
    # via
    #   ibm-watsonx-orchestrate
    #   langsmith
    #   translators
ibm-cloud-sdk-core==3.24.2
    # via ibm-watsonx-orchestrate
ibm-watsonx-orchestrate==1.7.0
    # via nl-damen
ibm-watsonx-orchestrate-evaluation-framework==1.0.6
    # via ibm-watsonx-orchestrate
idna==3.10
    # via
    #   anyio
    #   httpx
    #   requests
ipykernel==6.29.5
    # via nl-damen
ipython==9.4.0
    # via ipykernel
ipython-pygments-lexers==1.1.1
    # via ipython
jedi==0.19.2
    # via ipython
jh2==5.0.9
    # via urllib3-future
jinja2==3.1.6
    # via ibm-watsonx-orchestrate-evaluation-framework
jsonargparse==4.37.0
    # via ibm-watsonx-orchestrate-evaluation-framework
jsonpatch==1.33
    # via langchain-core
jsonpointer==3.0.0
    # via jsonpatch
jsonref==1.1.0
    # via ibm-watsonx-orchestrate
jsonschema==4.24.0
    # via ibm-watsonx-orchestrate
jsonschema-specifications==2025.4.1
    # via jsonschema
jupyter-client==8.6.3
    # via ipykernel
jupyter-core==5.8.1
    # via
    #   ipykernel
    #   jupyter-client
langchain-core==0.3.63
    # via ibm-watsonx-orchestrate
langsmith==0.3.45
    # via
    #   ibm-watsonx-orchestrate
    #   langchain-core
lxml==6.0.0
    # via translators
markdown-it-py==3.0.0
    # via rich
markupsafe==3.0.2
    # via jinja2
marshmallow==3.26.1
    # via dataclasses-json
matplotlib-inline==0.1.7
    # via
    #   ipykernel
    #   ipython
mdurl==0.1.2
    # via markdown-it-py
multiprocess==0.70.18
    # via pathos
munch==4.0.0
    # via ibm-watsonx-orchestrate
mypy-extensions==1.1.0
    # via typing-inspect
nest-asyncio==1.6.0
    # via ipykernel
niquests==3.14.1
    # via translators
orjson==3.11.0 ; platform_python_implementation != 'PyPy'
    # via langsmith
packaging==24.2
    # via
    #   ibm-watsonx-orchestrate
    #   ipykernel
    #   langchain-core
    #   langsmith
    #   marshmallow
parso==0.8.4
    # via jedi
pathos==0.3.4
    # via translators
pexpect==4.9.0 ; sys_platform != 'emscripten' and sys_platform != 'win32'
    # via ipython
platformdirs==4.3.8
    # via jupyter-core
pox==0.3.6
    # via pathos
ppft==1.7.7
    # via pathos
prompt-toolkit==3.0.51
    # via ipython
psutil==7.0.0
    # via ipykernel
ptyprocess==0.7.0 ; sys_platform != 'emscripten' and sys_platform != 'win32'
    # via pexpect
pure-eval==0.2.3
    # via stack-data
pycparser==2.22
    # via cffi
pydantic==2.11.7
    # via
    #   ibm-watsonx-orchestrate
    #   ibm-watsonx-orchestrate-evaluation-framework
    #   langchain-core
    #   langsmith
pydantic-core==2.33.2
    # via pydantic
pygments==2.19.2
    # via
    #   ipython
    #   ipython-pygments-lexers
    #   rich
pyjwt==2.10.1
    # via
    #   ibm-cloud-sdk-core
    #   ibm-watsonx-orchestrate
pyparsing==3.2.3
    # via cloudscraper
python-dateutil==2.9.0.post0
    # via
    #   ibm-cloud-sdk-core
    #   jupyter-client
python-dotenv==1.0.1
    # via
    #   ibm-watsonx-orchestrate
    #   ibm-watsonx-orchestrate-evaluation-framework
pytz==2025.2
    # via ibm-watsonx-orchestrate
pywin32==311 ; platform_python_implementation != 'PyPy' and sys_platform == 'win32'
    # via jupyter-core
pyyaml==6.0.2
    # via
    #   ibm-watsonx-orchestrate
    #   ibm-watsonx-orchestrate-evaluation-framework
    #   jsonargparse
    #   langchain-core
pyzmq==27.0.0
    # via
    #   ipykernel
    #   jupyter-client
qh3==1.5.3 ; (platform_machine == 'AMD64' and platform_python_implementation == 'CPython' and sys_platform == 'darwin') or (platform_machine == 'ARM64' and platform_python_implementation == 'CPython' and sys_platform == 'darwin') or (platform_machine == 'aarch64' and platform_python_implementation == 'CPython' and sys_platform == 'darwin') or (platform_machine == 'arm64' and platform_python_implementation == 'CPython' and sys_platform == 'darwin') or (platform_machine == 'armv7l' and platform_python_implementation == 'CPython' and sys_platform == 'darwin') or (platform_machine == 'i686' and platform_python_implementation == 'CPython' and sys_platform == 'darwin') or (platform_machine == 'ppc64' and platform_python_implementation == 'CPython' and sys_platform == 'darwin') or (platform_machine == 'ppc64le' and platform_python_implementation == 'CPython' and sys_platform == 'darwin') or (platform_machine == 's390x' and platform_python_implementation == 'CPython' and sys_platform == 'darwin') or (platform_machine == 'x86' and platform_python_implementation == 'CPython' and sys_platform == 'darwin') or (platform_machine == 'x86_64' and platform_python_implementation == 'CPython' and sys_platform == 'darwin') or (platform_machine == 'AMD64' and platform_python_implementation == 'CPython' and sys_platform == 'linux') or (platform_machine == 'ARM64' and platform_python_implementation == 'CPython' and sys_platform == 'linux') or (platform_machine == 'aarch64' and platform_python_implementation == 'CPython' and sys_platform == 'linux') or (platform_machine == 'arm64' and platform_python_implementation == 'CPython' and sys_platform == 'linux') or (platform_machine == 'armv7l' and platform_python_implementation == 'CPython' and sys_platform == 'linux') or (platform_machine == 'i686' and platform_python_implementation == 'CPython' and sys_platform == 'linux') or (platform_machine == 'ppc64' and platform_python_implementation == 'CPython' and sys_platform == 'linux') or (platform_machine == 'ppc64le' and platform_python_implementation == 'CPython' and sys_platform == 'linux') or (platform_machine == 's390x' and platform_python_implementation == 'CPython' and sys_platform == 'linux') or (platform_machine == 'x86' and platform_python_implementation == 'CPython' and sys_platform == 'linux') or (platform_machine == 'x86_64' and platform_python_implementation == 'CPython' and sys_platform == 'linux') or (platform_machine == 'AMD64' and platform_python_implementation == 'CPython' and sys_platform == 'win32') or (platform_machine == 'ARM64' and platform_python_implementation == 'CPython' and sys_platform == 'win32') or (platform_machine == 'aarch64' and platform_python_implementation == 'CPython' and sys_platform == 'win32') or (platform_machine == 'arm64' and platform_python_implementation == 'CPython' and sys_platform == 'win32') or (platform_machine == 'armv7l' and platform_python_implementation == 'CPython' and sys_platform == 'win32') or (platform_machine == 'i686' and platform_python_implementation == 'CPython' and sys_platform == 'win32') or (platform_machine == 'ppc64' and platform_python_implementation == 'CPython' and sys_platform == 'win32') or (platform_machine == 'ppc64le' and platform_python_implementation == 'CPython' and sys_platform == 'win32') or (platform_machine == 's390x' and platform_python_implementation == 'CPython' and sys_platform == 'win32') or (platform_machine == 'x86' and platform_python_implementation == 'CPython' and sys_platform == 'win32') or (platform_machine == 'x86_64' and platform_python_implementation == 'CPython' and sys_platform == 'win32')
    # via urllib3-future
redis==6.2.0
    # via ibm-watsonx-orchestrate
referencing==0.36.2
    # via
    #   jsonschema
    #   jsonschema-specifications
requests==2.32.4
    # via
    #   cloudscraper
    #   ibm-cloud-sdk-core
    #   ibm-watsonx-orchestrate
    #   langsmith
    #   requests-toolbelt
    #   translators
requests-toolbelt==1.0.0
    # via
    #   cloudscraper
    #   langsmith
rich==13.9.4
    # via
    #   ibm-watsonx-orchestrate
    #   ibm-watsonx-orchestrate-evaluation-framework
    #   typer
rpds-py==0.26.0
    # via
    #   jsonschema
    #   referencing
shellingham==1.5.4
    # via typer
six==1.17.0
    # via python-dateutil
sniffio==1.3.1
    # via anyio
stack-data==0.6.3
    # via ipython
tenacity==9.1.2
    # via langchain-core
tornado==6.5.1
    # via
    #   ipykernel
    #   jupyter-client
tqdm==4.67.1
    # via translators
traitlets==5.14.3
    # via
    #   comm
    #   ipykernel
    #   ipython
    #   jupyter-client
    #   jupyter-core
    #   matplotlib-inline
translators==6.0.1
    # via nl-damen
typer==0.16.0
    # via ibm-watsonx-orchestrate
typing-extensions==4.14.1
    # via
    #   anyio
    #   langchain-core
    #   pydantic
    #   pydantic-core
    #   referencing
    #   typer
    #   typing-inspect
    #   typing-inspection
typing-inspect==0.9.0
    # via dataclasses-json
typing-inspection==0.4.1
    # via pydantic
urllib3==2.5.0
    # via
    #   ibm-cloud-sdk-core
    #   ibm-watsonx-orchestrate
    #   requests
urllib3-future==2.13.900
    # via niquests
wassima==1.2.2
    # via niquests
wcwidth==0.2.13
    # via prompt-toolkit
zstandard==0.23.0
    # via langsmith
